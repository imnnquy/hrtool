package com.gcs.rms.pojo;

// Generated Mar 7, 2014 3:40:16 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Candidate generated by hbm2java
 */
@Entity
@Table(name = "candidate", catalog = "rmsdb")
public class Candidate implements java.io.Serializable {

    private Integer candidateId;

    private Status status;

    private Position position;

    private String candidateFirstName;

    private String candidateLastName;

    private String phone;

    private String address;

    private String link;

    private String email;

    private String picture;

    private String cv;

    private String summary;

    private Integer currentLevel;

    private Float expectedSalary;

    private Date createDate;

    private Set<CandidateSkill> candidateSkills = new HashSet<CandidateSkill>(0);

    private Set<EducationCertificate> educationCertificates = new HashSet<EducationCertificate>(0);

    private CandidateApplication candidateApplication;

    private Set<WorkingExperience> workingExperiences = new HashSet<WorkingExperience>(0);

    public Candidate() {
    }

    public Candidate(Status status, Position position, String candidateFirstName, String candidateLastName,
            String phone, String address, String link, String email, String picture, String cv, String summary,
            Integer currentLevel, Float expectedSalary, Date createDate, Set<CandidateSkill> candidateSkills,
            Set<EducationCertificate> educationCertificates, CandidateApplication candidateApplication,
            Set<WorkingExperience> workingExperiences) {
        this.status = status;
        this.position = position;
        this.candidateFirstName = candidateFirstName;
        this.candidateLastName = candidateLastName;
        this.phone = phone;
        this.address = address;
        this.link = link;
        this.email = email;
        this.picture = picture;
        this.cv = cv;
        this.summary = summary;
        this.currentLevel = currentLevel;
        this.expectedSalary = expectedSalary;
        this.createDate = createDate;
        this.candidateSkills = candidateSkills;
        this.educationCertificates = educationCertificates;
        this.candidateApplication = candidateApplication;
        this.workingExperiences = workingExperiences;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "Candidate_ID", unique = true, nullable = false)
    public Integer getCandidateId() {
        return this.candidateId;
    }

    public void setCandidateId(Integer candidateId) {
        this.candidateId = candidateId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Candidate_Status_ID")
    public Status getStatus() {
        return this.status;
    }

    public void setStatus(Status status) {
        this.status = status;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Position_ID")
    public Position getPosition() {
        return this.position;
    }

    public void setPosition(Position position) {
        this.position = position;
    }

    @Column(name = "Candidate_First_Name", length = 50)
    public String getCandidateFirstName() {
        return this.candidateFirstName;
    }

    public void setCandidateFirstName(String candidateFirstName) {
        this.candidateFirstName = candidateFirstName;
    }

    @Column(name = "Candidate_Last_Name", length = 50)
    public String getCandidateLastName() {
        return this.candidateLastName;
    }

    public void setCandidateLastName(String candidateLastName) {
        this.candidateLastName = candidateLastName;
    }

    @Column(name = "Phone", length = 50)
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    @Column(name = "Address", length = 100)
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Column(name = "Link", length = 50)
    public String getLink() {
        return this.link;
    }

    public void setLink(String link) {
        this.link = link;
    }

    @Column(name = "Email", length = 50)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "Picture", length = 50)
    public String getPicture() {
        return this.picture;
    }

    public void setPicture(String picture) {
        this.picture = picture;
    }

    @Column(name = "CV", length = 50)
    public String getCv() {
        return this.cv;
    }

    public void setCv(String cv) {
        this.cv = cv;
    }

    @Column(name = "Summary", length = 1000)
    public String getSummary() {
        return this.summary;
    }

    public void setSummary(String summary) {
        this.summary = summary;
    }

    @Column(name = "Current_Level")
    public Integer getCurrentLevel() {
        return this.currentLevel;
    }

    public void setCurrentLevel(Integer currentLevel) {
        this.currentLevel = currentLevel;
    }

    @Column(name = "Expected_Salary", precision = 12, scale = 0)
    public Float getExpectedSalary() {
        return this.expectedSalary;
    }

    public void setExpectedSalary(Float expectedSalary) {
        this.expectedSalary = expectedSalary;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "Create_Date", length = 19)
    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "candidate")
    public Set<CandidateSkill> getCandidateSkills() {
        return this.candidateSkills;
    }

    public void setCandidateSkills(Set<CandidateSkill> candidateSkills) {
        this.candidateSkills = candidateSkills;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "candidate")
    public Set<EducationCertificate> getEducationCertificates() {
        return this.educationCertificates;
    }

    public void setEducationCertificates(Set<EducationCertificate> educationCertificates) {
        this.educationCertificates = educationCertificates;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "candidate")
    public CandidateApplication getCandidateApplication() {
        return this.candidateApplication;
    }

    public void setCandidateApplication(CandidateApplication candidateApplication) {
        this.candidateApplication = candidateApplication;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "candidate")
    public Set<WorkingExperience> getWorkingExperiences() {
        return this.workingExperiences;
    }

    public void setWorkingExperiences(Set<WorkingExperience> workingExperiences) {
        this.workingExperiences = workingExperiences;
    }

}
